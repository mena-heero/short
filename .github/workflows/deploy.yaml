name: Build and Deploy

on:
  push:
    branches:
      - main
      - stable

jobs:
  development-build:
    name: Development Build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v2

      - name: Docker Login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Development Build Script
        run: |
          docker build  .  -t menaheero/loshort:dev1
          docker tag menaheero/loshort:dev1 docker.io/menaheero/loshort:dev1
          docker push docker.io/menaheero/loshort:dev1

  production-build:
    name: Production Build
    if: github.ref == 'refs/heads/stable'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git Repo
        uses: actions/checkout@v2

      - name: Docker Login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login docker.io -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Production Build Script
        run: |
            docker build .  -t menaheero/loshort:dev1
            docker tag menaheero/loshort:dev1 docker.io/menaheero/loshort:dev1
            docker push docker.io/menaheero/loshort:dev1

  production-deploy:
    name: Production Deploy
    needs: production-build
    if: github.ref == 'refs/heads/stable'
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Client
        run: |
          sudo apt-get update
          sudo apt-get install openssh-client -y

      - name: Production Deploy Script
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p /home/runner/.ssh
          ssh-keyscan -H $SERVER_IP >> /home/runner/.ssh/known_hosts
          echo "$SERVER_SSH_PRIVATE_KEY" > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa

          ssh -i /home/runner/.ssh/id_rsa -o StrictHostKeyChecking=no $SERVER_USERNAME@$SERVER_IP "cd /www/kutt/short && docker-compose pull && docker-compose stop && docker-compose up -d && docker image prune -f"
